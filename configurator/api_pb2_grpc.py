# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from configurator import api_pb2 as configurator_dot_api__pb2


class ConfiguratorStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetRadioCfg = channel.unary_unary(
                '/configurator.Configurator/GetRadioCfg',
                request_serializer=configurator_dot_api__pb2.RadioCfgRequest.SerializeToString,
                response_deserializer=configurator_dot_api__pb2.RadioCfgResponse.FromString,
                )
        self.TaskAcquire = channel.unary_unary(
                '/configurator.Configurator/TaskAcquire',
                request_serializer=configurator_dot_api__pb2.Task.SerializeToString,
                response_deserializer=configurator_dot_api__pb2.TaskDetails.FromString,
                )
        self.TaskDiscoveryReceived = channel.unary_unary(
                '/configurator.Configurator/TaskDiscoveryReceived',
                request_serializer=configurator_dot_api__pb2.Task.SerializeToString,
                response_deserializer=configurator_dot_api__pb2.TaskUpdateResponse.FromString,
                )
        self.TaskFinished = channel.unary_unary(
                '/configurator.Configurator/TaskFinished',
                request_serializer=configurator_dot_api__pb2.TaskFinishedRequest.SerializeToString,
                response_deserializer=configurator_dot_api__pb2.TaskUpdateResponse.FromString,
                )


class ConfiguratorServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetRadioCfg(self, request, context):
        """Return radio configuration for receiver
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TaskAcquire(self, request, context):
        """Sensor configuration task: Acquire
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TaskDiscoveryReceived(self, request, context):
        """Sensor configuration task: Discovery received
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TaskFinished(self, request, context):
        """Sensor configuration task: finished
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ConfiguratorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetRadioCfg': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRadioCfg,
                    request_deserializer=configurator_dot_api__pb2.RadioCfgRequest.FromString,
                    response_serializer=configurator_dot_api__pb2.RadioCfgResponse.SerializeToString,
            ),
            'TaskAcquire': grpc.unary_unary_rpc_method_handler(
                    servicer.TaskAcquire,
                    request_deserializer=configurator_dot_api__pb2.Task.FromString,
                    response_serializer=configurator_dot_api__pb2.TaskDetails.SerializeToString,
            ),
            'TaskDiscoveryReceived': grpc.unary_unary_rpc_method_handler(
                    servicer.TaskDiscoveryReceived,
                    request_deserializer=configurator_dot_api__pb2.Task.FromString,
                    response_serializer=configurator_dot_api__pb2.TaskUpdateResponse.SerializeToString,
            ),
            'TaskFinished': grpc.unary_unary_rpc_method_handler(
                    servicer.TaskFinished,
                    request_deserializer=configurator_dot_api__pb2.TaskFinishedRequest.FromString,
                    response_serializer=configurator_dot_api__pb2.TaskUpdateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'configurator.Configurator', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Configurator(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetRadioCfg(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/configurator.Configurator/GetRadioCfg',
            configurator_dot_api__pb2.RadioCfgRequest.SerializeToString,
            configurator_dot_api__pb2.RadioCfgResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TaskAcquire(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/configurator.Configurator/TaskAcquire',
            configurator_dot_api__pb2.Task.SerializeToString,
            configurator_dot_api__pb2.TaskDetails.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TaskDiscoveryReceived(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/configurator.Configurator/TaskDiscoveryReceived',
            configurator_dot_api__pb2.Task.SerializeToString,
            configurator_dot_api__pb2.TaskUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TaskFinished(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/configurator.Configurator/TaskFinished',
            configurator_dot_api__pb2.TaskFinishedRequest.SerializeToString,
            configurator_dot_api__pb2.TaskUpdateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
