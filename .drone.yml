---
### Autogenerated pipeline! DONT edit! ###
kind: pipeline
name: build-arm64
platform: {arch: arm64, os: linux, variant: v8}
steps:
- commands: [apk --no-cache add git, git fetch --tags, V=$(git describe --tags HEAD),
    echo "export default \\"$V\\";" > www/version.js, sed -i -e "/^const cacheVersion/s/
      =.*/ = \\"$V\\";/" www/sw.js]
  image: alpine:3.12
  name: versions
- depends_on: [versions]
  image: plugins/docker:19
  name: api
  settings:
    auto_tag: true
    auto_tag_suffix: arm64
    mirror: {from_secret: hub_docker_mirror}
    password: {from_secret: ghcr.io.password}
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-api
    target: api
    username: rkojedzinszky
  volumes:
  - {name: docker, path: /var/lib/docker}
- commands: ['mkdir -p ${GOPATH}/src/github.com/rkojedzinszky', 'ln -sf $(pwd) ${GOPATH}/src/github.com/rkojedzinszky/thermo-center',
    'cd ${GOPATH}/src/github.com/rkojedzinszky/thermo-center', mkdir bin, CGO_ENABLED=0
      go build -ldflags -s -o bin/grpcserver ./cmd/grpcserver, CGO_ENABLED=0 go build
      -ldflags -s -o bin/ws ./ws, CGO_ENABLED=0 go build -ldflags -s -o bin/receiver
      ./cmd/receiver]
  image: golang:1.16-alpine
  name: golang-build
- depends_on: [golang-build]
  image: plugins/docker:19
  name: receiver
  settings:
    auto_tag: true
    auto_tag_suffix: arm64
    dockerfile: Dockerfile.receiver
    mirror: {from_secret: hub_docker_mirror}
    password: {from_secret: ghcr.io.password}
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-receiver
    username: rkojedzinszky
- depends_on: [golang-build]
  image: plugins/docker:19
  name: grpcserver
  settings:
    auto_tag: true
    auto_tag_suffix: arm64
    dockerfile: Dockerfile.grpcserver
    mirror: {from_secret: hub_docker_mirror}
    password: {from_secret: ghcr.io.password}
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-grpcserver
    username: rkojedzinszky
- depends_on: [golang-build]
  image: plugins/docker:19
  name: ws
  settings:
    auto_tag: true
    auto_tag_suffix: arm64
    dockerfile: Dockerfile.ws
    mirror: {from_secret: hub_docker_mirror}
    password: {from_secret: ghcr.io.password}
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-ws
    username: rkojedzinszky
- depends_on: [api]
  image: plugins/docker:19
  name: ui
  settings:
    auto_tag: true
    auto_tag_suffix: arm64
    mirror: {from_secret: hub_docker_mirror}
    password: {from_secret: ghcr.io.password}
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-ui
    target: ui
    username: rkojedzinszky
  volumes:
  - {name: docker, path: /var/lib/docker}
volumes:
- name: docker
  temp: {}
---
### Autogenerated pipeline! DONT edit! ###
kind: pipeline
name: build-arm
platform: {arch: arm, os: linux, variant: v7}
steps:
- commands: [apk --no-cache add git, git fetch --tags, V=$(git describe --tags HEAD),
    echo "export default \\"$V\\";" > www/version.js, sed -i -e "/^const cacheVersion/s/
      =.*/ = \\"$V\\";/" www/sw.js]
  image: alpine:3.12
  name: versions
- depends_on: [versions]
  image: plugins/docker:19
  name: api
  settings:
    auto_tag: true
    auto_tag_suffix: arm
    mirror: {from_secret: hub_docker_mirror}
    password: {from_secret: ghcr.io.password}
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-api
    target: api
    username: rkojedzinszky
  volumes:
  - {name: docker, path: /var/lib/docker}
- commands: ['mkdir -p ${GOPATH}/src/github.com/rkojedzinszky', 'ln -sf $(pwd) ${GOPATH}/src/github.com/rkojedzinszky/thermo-center',
    'cd ${GOPATH}/src/github.com/rkojedzinszky/thermo-center', mkdir bin, CGO_ENABLED=0
      go build -ldflags -s -o bin/grpcserver ./cmd/grpcserver, CGO_ENABLED=0 go build
      -ldflags -s -o bin/ws ./ws, CGO_ENABLED=0 go build -ldflags -s -o bin/receiver
      ./cmd/receiver]
  image: golang:1.16-alpine
  name: golang-build
- depends_on: [golang-build]
  image: plugins/docker:19
  name: receiver
  settings:
    auto_tag: true
    auto_tag_suffix: arm
    dockerfile: Dockerfile.receiver
    mirror: {from_secret: hub_docker_mirror}
    password: {from_secret: ghcr.io.password}
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-receiver
    username: rkojedzinszky
- depends_on: [golang-build]
  image: plugins/docker:19
  name: grpcserver
  settings:
    auto_tag: true
    auto_tag_suffix: arm
    dockerfile: Dockerfile.grpcserver
    mirror: {from_secret: hub_docker_mirror}
    password: {from_secret: ghcr.io.password}
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-grpcserver
    username: rkojedzinszky
- depends_on: [golang-build]
  image: plugins/docker:19
  name: ws
  settings:
    auto_tag: true
    auto_tag_suffix: arm
    dockerfile: Dockerfile.ws
    mirror: {from_secret: hub_docker_mirror}
    password: {from_secret: ghcr.io.password}
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-ws
    username: rkojedzinszky
- depends_on: [api]
  image: plugins/docker:19
  name: ui
  settings:
    auto_tag: true
    auto_tag_suffix: arm
    mirror: {from_secret: hub_docker_mirror}
    password: {from_secret: ghcr.io.password}
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-ui
    target: ui
    username: rkojedzinszky
  volumes:
  - {name: docker, path: /var/lib/docker}
volumes:
- name: docker
  temp: {}
---
### Autogenerated pipeline! DONT edit! ###
kind: pipeline
name: build-amd64
platform: {arch: amd64, os: linux}
steps:
- commands: [apk --no-cache add git, git fetch --tags, V=$(git describe --tags HEAD),
    echo "export default \\"$V\\";" > www/version.js, sed -i -e "/^const cacheVersion/s/
      =.*/ = \\"$V\\";/" www/sw.js]
  image: alpine:3.12
  name: versions
- depends_on: [versions]
  image: plugins/docker:19
  name: api
  settings:
    auto_tag: true
    auto_tag_suffix: amd64
    mirror: {from_secret: hub_docker_mirror}
    password: {from_secret: ghcr.io.password}
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-api
    target: api
    username: rkojedzinszky
  volumes:
  - {name: docker, path: /var/lib/docker}
- commands: ['mkdir -p ${GOPATH}/src/github.com/rkojedzinszky', 'ln -sf $(pwd) ${GOPATH}/src/github.com/rkojedzinszky/thermo-center',
    'cd ${GOPATH}/src/github.com/rkojedzinszky/thermo-center', mkdir bin, CGO_ENABLED=0
      go build -ldflags -s -o bin/grpcserver ./cmd/grpcserver, CGO_ENABLED=0 go build
      -ldflags -s -o bin/ws ./ws, CGO_ENABLED=0 go build -ldflags -s -o bin/receiver
      ./cmd/receiver]
  image: golang:1.16-alpine
  name: golang-build
- depends_on: [golang-build]
  image: plugins/docker:19
  name: receiver
  settings:
    auto_tag: true
    auto_tag_suffix: amd64
    dockerfile: Dockerfile.receiver
    mirror: {from_secret: hub_docker_mirror}
    password: {from_secret: ghcr.io.password}
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-receiver
    username: rkojedzinszky
- depends_on: [golang-build]
  image: plugins/docker:19
  name: grpcserver
  settings:
    auto_tag: true
    auto_tag_suffix: amd64
    dockerfile: Dockerfile.grpcserver
    mirror: {from_secret: hub_docker_mirror}
    password: {from_secret: ghcr.io.password}
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-grpcserver
    username: rkojedzinszky
- depends_on: [golang-build]
  image: plugins/docker:19
  name: ws
  settings:
    auto_tag: true
    auto_tag_suffix: amd64
    dockerfile: Dockerfile.ws
    mirror: {from_secret: hub_docker_mirror}
    password: {from_secret: ghcr.io.password}
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-ws
    username: rkojedzinszky
- depends_on: [api]
  image: plugins/docker:19
  name: ui
  settings:
    auto_tag: true
    auto_tag_suffix: amd64
    mirror: {from_secret: hub_docker_mirror}
    password: {from_secret: ghcr.io.password}
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-ui
    target: ui
    username: rkojedzinszky
  volumes:
  - {name: docker, path: /var/lib/docker}
volumes:
- name: docker
  temp: {}
---
depends_on: [build-arm64, build-arm, build-amd64]
kind: pipeline
name: manifest
platform: {arch: arm64, os: linux, variant: v8}
steps:
- image: plugins/manifest
  name: ghcr.io/rkojedzinszky/thermo-center-api
  settings:
    auto_tag: true
    password: {from_secret: ghcr.io.password}
    spec: manifests/ghcr.io-rkojedzinszky-thermo-center-api.tmpl
    username: rkojedzinszky
- image: plugins/manifest
  name: ghcr.io/rkojedzinszky/thermo-center-receiver
  settings:
    auto_tag: true
    password: {from_secret: ghcr.io.password}
    spec: manifests/ghcr.io-rkojedzinszky-thermo-center-receiver.tmpl
    username: rkojedzinszky
- image: plugins/manifest
  name: ghcr.io/rkojedzinszky/thermo-center-grpcserver
  settings:
    auto_tag: true
    password: {from_secret: ghcr.io.password}
    spec: manifests/ghcr.io-rkojedzinszky-thermo-center-grpcserver.tmpl
    username: rkojedzinszky
- image: plugins/manifest
  name: ghcr.io/rkojedzinszky/thermo-center-ws
  settings:
    auto_tag: true
    password: {from_secret: ghcr.io.password}
    spec: manifests/ghcr.io-rkojedzinszky-thermo-center-ws.tmpl
    username: rkojedzinszky
- image: plugins/manifest
  name: ghcr.io/rkojedzinszky/thermo-center-ui
  settings:
    auto_tag: true
    password: {from_secret: ghcr.io.password}
    spec: manifests/ghcr.io-rkojedzinszky-thermo-center-ui.tmpl
    username: rkojedzinszky
