---
### Autogenerated pipeline! DONT edit! ###
kind: pipeline
name: build-arm64
node_selector:
  kubernetes.io/arch: arm64
platform:
  arch: arm64
  os: linux
  variant: v8
resources:
  requests:
    memory: 384Mi
steps:
- commands:
  - apk --no-cache add git
  - git fetch --tags
  - V=$(git describe --tags HEAD)
  - echo "export default \\"$V\\";" > www/version.js
  - sed -i -e "/^const cacheVersion/s/ =.*/ = \\"$V\\";/" www/sw.js
  image: alpine:3.15
  name: versions
- image: plugins/docker
  name: api
  privileged: true
  pull: always
  settings:
    auto_tag: true
    auto_tag_suffix: arm64
    mirror:
      from_secret: hub_docker_mirror
    password:
      from_secret: ghcr.io.password
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-api
    target: api
    username: rkojedzinszky
  volumes:
  - name: docker
    path: /var/lib/docker
- commands:
  - CGO_ENABLED=0 go build -ldflags -s -o cmd/grpcserver/grpcserver ./cmd/grpcserver
  - CGO_ENABLED=0 go build -ldflags -s -o cmd/ws/ws ./cmd/ws
  - CGO_ENABLED=0 go build -ldflags -s -o cmd/receiver/receiver ./cmd/receiver
  image: golang:1.18-alpine
  name: golang-build
  pull: always
- image: plugins/docker
  name: receiver
  privileged: true
  pull: always
  settings:
    auto_tag: true
    auto_tag_suffix: arm64
    context: cmd/receiver
    dockerfile: cmd/receiver/Dockerfile
    mirror:
      from_secret: hub_docker_mirror
    password:
      from_secret: ghcr.io.password
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-receiver
    username: rkojedzinszky
  volumes:
  - name: docker
    path: /var/lib/docker
- image: plugins/docker
  name: grpcserver
  privileged: true
  pull: always
  settings:
    auto_tag: true
    auto_tag_suffix: arm64
    context: cmd/grpcserver
    dockerfile: cmd/grpcserver/Dockerfile
    mirror:
      from_secret: hub_docker_mirror
    password:
      from_secret: ghcr.io.password
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-grpcserver
    username: rkojedzinszky
  volumes:
  - name: docker
    path: /var/lib/docker
- image: plugins/docker
  name: ws
  privileged: true
  pull: always
  settings:
    auto_tag: true
    auto_tag_suffix: arm64
    context: cmd/ws
    dockerfile: cmd/ws/Dockerfile
    mirror:
      from_secret: hub_docker_mirror
    password:
      from_secret: ghcr.io.password
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-ws
    username: rkojedzinszky
  volumes:
  - name: docker
    path: /var/lib/docker
- image: plugins/docker
  name: ui
  privileged: true
  pull: always
  settings:
    auto_tag: true
    auto_tag_suffix: arm64
    mirror:
      from_secret: hub_docker_mirror
    password:
      from_secret: ghcr.io.password
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-ui
    target: ui
    username: rkojedzinszky
  volumes:
  - name: docker
    path: /var/lib/docker
type: kubernetes
volumes:
- name: docker
  temp: {}
---
### Autogenerated pipeline! DONT edit! ###
kind: pipeline
name: build-arm
node_selector:
  kubernetes.io/arch: arm
platform:
  arch: arm
  os: linux
  variant: v7
resources:
  requests:
    memory: 384Mi
steps:
- commands:
  - apk --no-cache add git
  - git fetch --tags
  - V=$(git describe --tags HEAD)
  - echo "export default \\"$V\\";" > www/version.js
  - sed -i -e "/^const cacheVersion/s/ =.*/ = \\"$V\\";/" www/sw.js
  image: alpine:3.15
  name: versions
- image: plugins/docker
  name: api
  privileged: true
  pull: always
  settings:
    auto_tag: true
    auto_tag_suffix: arm
    mirror:
      from_secret: hub_docker_mirror
    password:
      from_secret: ghcr.io.password
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-api
    target: api
    username: rkojedzinszky
  volumes:
  - name: docker
    path: /var/lib/docker
- commands:
  - CGO_ENABLED=0 go build -ldflags -s -o cmd/grpcserver/grpcserver ./cmd/grpcserver
  - CGO_ENABLED=0 go build -ldflags -s -o cmd/ws/ws ./cmd/ws
  - CGO_ENABLED=0 go build -ldflags -s -o cmd/receiver/receiver ./cmd/receiver
  image: golang:1.18-alpine
  name: golang-build
  pull: always
- image: plugins/docker
  name: receiver
  privileged: true
  pull: always
  settings:
    auto_tag: true
    auto_tag_suffix: arm
    context: cmd/receiver
    dockerfile: cmd/receiver/Dockerfile
    mirror:
      from_secret: hub_docker_mirror
    password:
      from_secret: ghcr.io.password
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-receiver
    username: rkojedzinszky
  volumes:
  - name: docker
    path: /var/lib/docker
- image: plugins/docker
  name: grpcserver
  privileged: true
  pull: always
  settings:
    auto_tag: true
    auto_tag_suffix: arm
    context: cmd/grpcserver
    dockerfile: cmd/grpcserver/Dockerfile
    mirror:
      from_secret: hub_docker_mirror
    password:
      from_secret: ghcr.io.password
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-grpcserver
    username: rkojedzinszky
  volumes:
  - name: docker
    path: /var/lib/docker
- image: plugins/docker
  name: ws
  privileged: true
  pull: always
  settings:
    auto_tag: true
    auto_tag_suffix: arm
    context: cmd/ws
    dockerfile: cmd/ws/Dockerfile
    mirror:
      from_secret: hub_docker_mirror
    password:
      from_secret: ghcr.io.password
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-ws
    username: rkojedzinszky
  volumes:
  - name: docker
    path: /var/lib/docker
- image: plugins/docker
  name: ui
  privileged: true
  pull: always
  settings:
    auto_tag: true
    auto_tag_suffix: arm
    mirror:
      from_secret: hub_docker_mirror
    password:
      from_secret: ghcr.io.password
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-ui
    target: ui
    username: rkojedzinszky
  volumes:
  - name: docker
    path: /var/lib/docker
type: kubernetes
volumes:
- name: docker
  temp: {}
---
### Autogenerated pipeline! DONT edit! ###
kind: pipeline
name: build-amd64
node_selector:
  kubernetes.io/arch: amd64
platform:
  arch: amd64
  os: linux
resources:
  requests:
    memory: 384Mi
steps:
- commands:
  - apk --no-cache add git
  - git fetch --tags
  - V=$(git describe --tags HEAD)
  - echo "export default \\"$V\\";" > www/version.js
  - sed -i -e "/^const cacheVersion/s/ =.*/ = \\"$V\\";/" www/sw.js
  image: alpine:3.15
  name: versions
- image: plugins/docker
  name: api
  privileged: true
  pull: always
  settings:
    auto_tag: true
    auto_tag_suffix: amd64
    mirror:
      from_secret: hub_docker_mirror
    password:
      from_secret: ghcr.io.password
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-api
    target: api
    username: rkojedzinszky
  volumes:
  - name: docker
    path: /var/lib/docker
- commands:
  - CGO_ENABLED=0 go build -ldflags -s -o cmd/grpcserver/grpcserver ./cmd/grpcserver
  - CGO_ENABLED=0 go build -ldflags -s -o cmd/ws/ws ./cmd/ws
  - CGO_ENABLED=0 go build -ldflags -s -o cmd/receiver/receiver ./cmd/receiver
  image: golang:1.18-alpine
  name: golang-build
  pull: always
- image: plugins/docker
  name: receiver
  privileged: true
  pull: always
  settings:
    auto_tag: true
    auto_tag_suffix: amd64
    context: cmd/receiver
    dockerfile: cmd/receiver/Dockerfile
    mirror:
      from_secret: hub_docker_mirror
    password:
      from_secret: ghcr.io.password
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-receiver
    username: rkojedzinszky
  volumes:
  - name: docker
    path: /var/lib/docker
- image: plugins/docker
  name: grpcserver
  privileged: true
  pull: always
  settings:
    auto_tag: true
    auto_tag_suffix: amd64
    context: cmd/grpcserver
    dockerfile: cmd/grpcserver/Dockerfile
    mirror:
      from_secret: hub_docker_mirror
    password:
      from_secret: ghcr.io.password
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-grpcserver
    username: rkojedzinszky
  volumes:
  - name: docker
    path: /var/lib/docker
- image: plugins/docker
  name: ws
  privileged: true
  pull: always
  settings:
    auto_tag: true
    auto_tag_suffix: amd64
    context: cmd/ws
    dockerfile: cmd/ws/Dockerfile
    mirror:
      from_secret: hub_docker_mirror
    password:
      from_secret: ghcr.io.password
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-ws
    username: rkojedzinszky
  volumes:
  - name: docker
    path: /var/lib/docker
- image: plugins/docker
  name: ui
  privileged: true
  pull: always
  settings:
    auto_tag: true
    auto_tag_suffix: amd64
    mirror:
      from_secret: hub_docker_mirror
    password:
      from_secret: ghcr.io.password
    registry: ghcr.io
    repo: ghcr.io/rkojedzinszky/thermo-center-ui
    target: ui
    username: rkojedzinszky
  volumes:
  - name: docker
    path: /var/lib/docker
type: kubernetes
volumes:
- name: docker
  temp: {}
---
depends_on:
- build-arm64
- build-arm
- build-amd64
kind: pipeline
name: manifest
platform:
  arch: arm64
  os: linux
  variant: v8
steps:
- image: plugins/manifest
  name: ghcr.io/rkojedzinszky/thermo-center-api
  settings:
    auto_tag: true
    password:
      from_secret: ghcr.io.password
    spec: manifests/ghcr.io-rkojedzinszky-thermo-center-api.tmpl
    username: rkojedzinszky
- image: plugins/manifest
  name: ghcr.io/rkojedzinszky/thermo-center-receiver
  settings:
    auto_tag: true
    password:
      from_secret: ghcr.io.password
    spec: manifests/ghcr.io-rkojedzinszky-thermo-center-receiver.tmpl
    username: rkojedzinszky
- image: plugins/manifest
  name: ghcr.io/rkojedzinszky/thermo-center-grpcserver
  settings:
    auto_tag: true
    password:
      from_secret: ghcr.io.password
    spec: manifests/ghcr.io-rkojedzinszky-thermo-center-grpcserver.tmpl
    username: rkojedzinszky
- image: plugins/manifest
  name: ghcr.io/rkojedzinszky/thermo-center-ws
  settings:
    auto_tag: true
    password:
      from_secret: ghcr.io.password
    spec: manifests/ghcr.io-rkojedzinszky-thermo-center-ws.tmpl
    username: rkojedzinszky
- image: plugins/manifest
  name: ghcr.io/rkojedzinszky/thermo-center-ui
  settings:
    auto_tag: true
    password:
      from_secret: ghcr.io.password
    spec: manifests/ghcr.io-rkojedzinszky-thermo-center-ui.tmpl
    username: rkojedzinszky
type: kubernetes
